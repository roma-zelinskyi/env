#!/bin/zsh

function find_compile_commands_dir {
    local compile_commands_dir=$PWD

    while [[ $(dirname $compile_commands_dir) != $REPO ]]; do
        compile_commands_dir=$(dirname $compile_commands_dir)
    done

    local cc_dir=$(find ${compile_commands_dir} -name compile_commands.json | sed 's|/[^/]*$||')
    if [ -z "${cc_dir}" ]; then
        compile_commands_dir=$compile_commands_dir/build
    else
        compile_commands_dir=$cc_dir
    fi

    echo $compile_commands_dir
}

function set_mbient_coc_settings_local_config {
    mkdir $2/.vim
    echo -e "{
    \"languageserver\": {
        \"clangd_docker\": {
            \"host\": \"127.0.0.1\",
            \"port\": $1,
            \"filetypes\": [\"c\", \"cc\", \"cpp\", \"c++\", \"cxx\"]
        }
    }\n}" >> $2/.vim/coc-settings.json
}

function start_container {
    local compile_commands_dir=$(find_compile_commands_dir)
    proj_dir=$compile_commands_dir
    while [[ $(dirname $proj_dir) != $REPO ]] ; do
        proj_dir=$(dirname $proj_dir)
    done

    base_name=$(basename $proj_dir)
    container_name=$base_name-clangd
    compile_commands_dir=$(echo $compile_commands_dir | sed "s/.*\(${base_name}\)/\1/g")
    
    if docker ps -a --format '{{.Names}}' | grep -Eq "^${container_name}\$"; then
        docker start $container_name
    else
        port=$(python3 -c "import socket; s = socket.socket(); s.bind(('', 0));print(s.getsockname()[1]);s.close()")

        rm -rf $proj_dir/.vim
        set_mbient_coc_settings_local_config $port $proj_dir

        docker run -d -p $port:$port -v $proj_dir:/$base_name --name $container_name clangd \
            socat tcp-listen:$port,reuseaddr "exec:clangd --compile-commands-dir=${compile_commands_dir} --path-mappings=${proj_dir}=/${base_name}"
    fi
}


if [[ $PWD/ = $REPO/*/* ]]; then
    start_container
    nvim $@
else
    nvim $@
fi
